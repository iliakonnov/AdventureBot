from __future__ import annotations
import typing, abc, enum
from stubhelper import *

import System
import System.Runtime.CompilerServices
import IronPython.Compiler
import IronPython.Compiler.Ast
import Microsoft.Scripting
import System.Linq.Expressions
import Microsoft.Scripting.Interpreter
import System.Collections.Generic
import IronPython.Compiler.Ast.FunctionDefinition
import IronPython.Runtime
import Microsoft.Scripting.Ast
import System.Collections.ObjectModel
import Microsoft.Scripting.Runtime
import System.Reflection
import IronPython.Compiler.Ast.ScopeStatement
import Microsoft.Scripting.Actions

T = typing.TypeVar('T')

class SiteStorage027(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStorage004(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class SiteStorage006(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class AssertStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Test(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Message(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, test: IronPython.Compiler.Ast.Expression, message: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class AugmentedAssignStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Operator(self) -> int:
        ...

    @property
    def Left(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Right(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, op: int, left: IronPython.Compiler.Ast.Expression, right: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def PythonOperatorToAction(op: int, ) -> int:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class Statement(IronPython.Compiler.Ast.Node, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

class FunctionDefinition(Microsoft.Scripting.Interpreter.IInstructionProvider, IronPython.Compiler.Ast.ScopeStatement):
    @typing.overload
    def __init__(self, **kwargs):
        self._nameVariable: IronPython.Compiler.Ast.PythonVariable
        self._hasReturn: bool
        self._variableMapping: System.Collections.Generic.Dictionary[IronPython.Compiler.Ast.PythonVariable, System.Linq.Expressions.Expression]
        ...

    # static fields
    _functionParam: System.Linq.Expressions.ParameterExpression = ...
    _returnLabel: System.Linq.Expressions.LabelTarget = ...
    ArbitraryGlobalsVisitorInstance: IronPython.Compiler.Ast.FunctionDefinition.ArbitraryGlobalsVisitor = ...

    # properties
    @property
    def LocalContext(self) -> System.Linq.Expressions.Expression:
        ...

    @property
    def IsLambda(self) -> bool:
        ...

    @property
    def IsAsync(self) -> bool:
        ...

    @property
    def Parameters(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.Parameter]:
        ...

    @property
    def ParameterNames(self) -> System.Array[str]:
        ...

    @property
    def ArgCount(self) -> int:
        ...

    @property
    def KwOnlyArgCount(self) -> int:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...
    @Body.setter
    def Body(self, val: IronPython.Compiler.Ast.Statement):
        ...

    @property
    def Header(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def HeaderIndex(self) -> int:
        ...
    @HeaderIndex.setter
    def HeaderIndex(self, val: int):
        ...

    @property
    def Name(self) -> str:
        ...

    @property
    def Decorators(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.Expression]:
        ...
    @Decorators.setter
    def Decorators(self, val: System.Collections.Generic.IList[IronPython.Compiler.Ast.Expression]):
        ...

    @property
    def ReturnAnnotation(self) -> IronPython.Compiler.Ast.Expression:
        ...
    @ReturnAnnotation.setter
    def ReturnAnnotation(self, val: IronPython.Compiler.Ast.Expression):
        ...

    @property
    def IsGeneratorMethod(self) -> bool:
        ...

    @property
    def IsGenerator(self) -> bool:
        ...
    @IsGenerator.setter
    def IsGenerator(self, val: bool):
        ...

    @property
    def GeneratorStop(self) -> bool:
        ...
    @GeneratorStop.setter
    def GeneratorStop(self, val: bool):
        ...

    @property
    def CanSetSysExcInfo(self) -> bool:
        ...
    @CanSetSysExcInfo.setter
    def CanSetSysExcInfo(self, val: bool):
        ...

    @property
    def ContainsTryFinally(self) -> bool:
        ...
    @ContainsTryFinally.setter
    def ContainsTryFinally(self, val: bool):
        ...

    @property
    def PythonVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @PythonVariable.setter
    def PythonVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def Flags(self) -> int:
        ...

    @property
    def OriginalDelegate(self) -> System.Delegate:
        ...

    @property
    def ScopeDocumentation(self) -> str:
        ...

    @property
    def FunctionCode(self) -> IronPython.Runtime.FunctionCode:
        ...

    @property
    def ProfilerName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def ContainsImportStar(self) -> bool:
        ...
    @ContainsImportStar.setter
    def ContainsImportStar(self, val: bool):
        ...

    @property
    def ContainsExceptionHandling(self) -> bool:
        ...
    @ContainsExceptionHandling.setter
    def ContainsExceptionHandling(self, val: bool):
        ...

    @property
    def LocalParentTuple(self) -> System.Linq.Expressions.ParameterExpression:
        ...

    @property
    def IsClosure(self) -> bool:
        ...

    @property
    def ContainsNestedFreeVariables(self) -> bool:
        ...
    @ContainsNestedFreeVariables.setter
    def ContainsNestedFreeVariables(self, val: bool):
        ...

    @property
    def NeedsLocalsDictionary(self) -> bool:
        ...
    @NeedsLocalsDictionary.setter
    def NeedsLocalsDictionary(self, val: bool):
        ...

    @property
    def Filename(self) -> str:
        ...

    @property
    def HasLateBoundVariableSets(self) -> bool:
        ...
    @HasLateBoundVariableSets.setter
    def HasLateBoundVariableSets(self, val: bool):
        ...

    @property
    def Variables(self) -> System.Collections.Generic.Dictionary[str, IronPython.Compiler.Ast.PythonVariable]:
        ...

    @property
    def IsGlobal(self) -> bool:
        ...

    @property
    def NeedsLocalContext(self) -> bool:
        ...

    @property
    def ShouldInterpret(self) -> bool:
        ...
    @ShouldInterpret.setter
    def ShouldInterpret(self, val: bool):
        ...

    @property
    def FreeVariables(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.PythonVariable]:
        ...

    @property
    def GlobalVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def CellVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def TupleCells(self) -> int:
        ...

    @property
    def PyContext(self) -> IronPython.Runtime.PythonContext:
        ...

    @property
    def FuncCodeExpr(self) -> System.Linq.Expressions.Expression:
        ...
    @FuncCodeExpr.setter
    def FuncCodeExpr(self, val: System.Linq.Expressions.Expression):
        ...

    @property
    def PrintExpressions(self) -> bool:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    @typing.overload
    def __init__(self, name: str, parameters: System.Array[IronPython.Compiler.Ast.Parameter], isAsync: bool = ..., ):
        ...

    @typing.overload
    def __init__(self, name: str, parameters: System.Array[IronPython.Compiler.Ast.Parameter], body: IronPython.Compiler.Ast.Statement, isAsync: bool = ..., ):
        ...

    @typing.overload
    def __init__(self, name: str, parameters: System.Array[IronPython.Compiler.Ast.Parameter], sourceUnit: Microsoft.Scripting.SourceUnit, ):
        ...

    @typing.overload
    def __init__(self, name: str, parameters: System.Array[IronPython.Compiler.Ast.Parameter], body: IronPython.Compiler.Ast.Statement, sourceUnit: Microsoft.Scripting.SourceUnit, ):
        ...

    def ExposesLocalVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> bool:
        ...

    def AddFreeVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, accessedInScope: bool, ) -> None:
        ...

    def TryBindOuter(self, from_: IronPython.Compiler.Ast.ScopeStatement, reference: IronPython.Compiler.Ast.PythonReference, variable: ref[IronPython.Compiler.Ast.PythonVariable], ) -> bool:
        ...

    def BindReference(self, binder: IronPython.Compiler.Ast.PythonNameBinder, reference: IronPython.Compiler.Ast.PythonReference, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def Bind(self, binder: IronPython.Compiler.Ast.PythonNameBinder, ) -> None:
        ...

    def FinishBind(self, binder: IronPython.Compiler.Ast.PythonNameBinder, ) -> None:
        ...

    def Verify(self, binder: IronPython.Compiler.Ast.PythonNameBinder, ) -> None:
        ...

    def GetParentClosureTuple(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def MakeFunctionExpression(self, ) -> System.Linq.Expressions.Expression:
        ...

    def AddInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

    def CreateFunctionInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

    @staticmethod
    def CompileAssignment(compiler: Microsoft.Scripting.Interpreter.LightCompiler, variable: System.Linq.Expressions.Expression, compileValue: System.Action[Microsoft.Scripting.Interpreter.LightCompiler], ) -> None:
        ...

    def EnsureFunctionLambda(self, ) -> Microsoft.Scripting.Ast.LightLambdaExpression:
        ...

    def CreateFunctionLambda(self, ) -> Microsoft.Scripting.Ast.LightLambdaExpression:
        ...

    def GetLambda(self, ) -> Microsoft.Scripting.Ast.LightLambdaExpression:
        ...

    @staticmethod
    def AddDefaultReturn(body: System.Linq.Expressions.Expression, returnType: System.Type, ) -> System.Linq.Expressions.Expression:
        ...

    def CreateParameters(self, needsWrapperMethod: bool, locals: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder[System.Linq.Expressions.ParameterExpression], ) -> System.Array[System.Linq.Expressions.ParameterExpression]:
        ...

    def CreateFunctionVariables(self, locals: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder[System.Linq.Expressions.ParameterExpression], init: System.Collections.Generic.List[System.Linq.Expressions.Expression], ) -> None:
        ...

    def AddReturnTarget(self, expression: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def EmitDebugFunction(self, ) -> bool:
        ...

    def GetVarNames(self, ) -> System.Collections.Generic.IList[str]:
        ...

    def InitializeParameters(self, init: System.Collections.Generic.List[System.Linq.Expressions.Expression], needsWrapperMethod: bool, parameters: System.Array[System.Linq.Expressions.Expression], ) -> None:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    @staticmethod
    def GetDelegateType(parameters: System.Array[IronPython.Compiler.Ast.Parameter], wrapper: bool, originalTarget: ref[System.Delegate], ) -> System.Type:
        ...

    def RewriteBody(self, visitor: System.Linq.Expressions.ExpressionVisitor, ) -> None:
        ...

class SiteStorage001(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStorage010(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class PythonAst(IronPython.Compiler.Ast.ScopeStatement):
    @typing.overload
    def __init__(self, **kwargs):
        self._lineLocations: System.Array[int]
        self._arrayExpression: System.Linq.Expressions.Expression
        self._profiler: IronPython.Runtime.Profiler
        self._variableMapping: System.Collections.Generic.Dictionary[IronPython.Compiler.Ast.PythonVariable, System.Linq.Expressions.Expression]
        ...

    # static fields
    _functionCode: System.Linq.Expressions.ParameterExpression = ...
    _globalArray: System.Linq.Expressions.ParameterExpression = ...
    _globalContext: System.Linq.Expressions.ParameterExpression = ...
    _arrayFuncParams: System.Collections.ObjectModel.ReadOnlyCollection[System.Linq.Expressions.ParameterExpression] = ...
    GlobalContextName: str = ...

    # properties
    @property
    def Name(self) -> str:
        ...

    @property
    def LocalContext(self) -> System.Linq.Expressions.Expression:
        ...

    @property
    def IsGlobal(self) -> bool:
        ...

    @property
    def DocVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @DocVariable.setter
    def DocVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def NameVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @NameVariable.setter
    def NameVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def PackageVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @PackageVariable.setter
    def PackageVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def SpecVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @SpecVariable.setter
    def SpecVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def FileVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @FileVariable.setter
    def FileVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def CompilerContext(self) -> Microsoft.Scripting.Runtime.CompilerContext:
        ...

    @property
    def GlobalArrayInstance(self) -> System.Linq.Expressions.Expression:
        ...

    @property
    def Document(self) -> System.Linq.Expressions.SymbolDocumentInfo:
        ...

    @property
    def ModuleVariables(self) -> System.Collections.Generic.Dictionary[IronPython.Compiler.Ast.PythonVariable, System.Linq.Expressions.Expression]:
        ...

    @property
    def ModuleContext(self) -> IronPython.Runtime.ModuleContext:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def GeneratorStop(self) -> bool:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def IsModule(self) -> bool:
        ...

    @property
    def PrintExpressions(self) -> bool:
        ...

    @property
    def ModuleFileName(self) -> str:
        ...

    @property
    def ModuleName(self) -> str:
        ...

    @property
    def Flags(self) -> int:
        ...

    @property
    def SourceUnit(self) -> Microsoft.Scripting.SourceUnit:
        ...

    @property
    def CompilationMode(self) -> IronPython.Compiler.CompilationMode:
        ...

    @property
    def ProfilerName(self) -> str:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def OnDiskProxy(self) -> bool:
        ...

    @property
    def ContainsImportStar(self) -> bool:
        ...
    @ContainsImportStar.setter
    def ContainsImportStar(self, val: bool):
        ...

    @property
    def ContainsExceptionHandling(self) -> bool:
        ...
    @ContainsExceptionHandling.setter
    def ContainsExceptionHandling(self, val: bool):
        ...

    @property
    def IsGeneratorMethod(self) -> bool:
        ...

    @property
    def LocalParentTuple(self) -> System.Linq.Expressions.ParameterExpression:
        ...

    @property
    def IsClosure(self) -> bool:
        ...

    @property
    def ContainsNestedFreeVariables(self) -> bool:
        ...
    @ContainsNestedFreeVariables.setter
    def ContainsNestedFreeVariables(self, val: bool):
        ...

    @property
    def NeedsLocalsDictionary(self) -> bool:
        ...
    @NeedsLocalsDictionary.setter
    def NeedsLocalsDictionary(self, val: bool):
        ...

    @property
    def Filename(self) -> str:
        ...

    @property
    def HasLateBoundVariableSets(self) -> bool:
        ...
    @HasLateBoundVariableSets.setter
    def HasLateBoundVariableSets(self, val: bool):
        ...

    @property
    def Variables(self) -> System.Collections.Generic.Dictionary[str, IronPython.Compiler.Ast.PythonVariable]:
        ...

    @property
    def NeedsLocalContext(self) -> bool:
        ...

    @property
    def ParameterNames(self) -> System.Array[str]:
        ...

    @property
    def ArgCount(self) -> int:
        ...

    @property
    def KwOnlyArgCount(self) -> int:
        ...

    @property
    def ScopeDocumentation(self) -> str:
        ...

    @property
    def OriginalDelegate(self) -> System.Delegate:
        ...

    @property
    def ShouldInterpret(self) -> bool:
        ...
    @ShouldInterpret.setter
    def ShouldInterpret(self, val: bool):
        ...

    @property
    def FreeVariables(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.PythonVariable]:
        ...

    @property
    def GlobalVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def CellVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def TupleCells(self) -> int:
        ...

    @property
    def PyContext(self) -> IronPython.Runtime.PythonContext:
        ...

    @property
    def FuncCodeExpr(self) -> System.Linq.Expressions.Expression:
        ...
    @FuncCodeExpr.setter
    def FuncCodeExpr(self, val: System.Linq.Expressions.Expression):
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    @typing.overload
    def __init__(self, body: IronPython.Compiler.Ast.Statement, isModule: bool, languageFeatures: int, printExpressions: bool, ):
        ...

    @typing.overload
    def __init__(self, body: IronPython.Compiler.Ast.Statement, isModule: bool, languageFeatures: int, printExpressions: bool, context: Microsoft.Scripting.Runtime.CompilerContext, lineLocations: System.Array[int], ):
        ...

    @typing.overload
    def __init__(self, isModule: bool, languageFeatures: int, printExpressions: bool, context: Microsoft.Scripting.Runtime.CompilerContext, ):
        ...

    @typing.overload
    def __init__(self, context: Microsoft.Scripting.Runtime.CompilerContext, ):
        ...

    def ParsingFinished(self, lineLocations: System.Array[int], body: IronPython.Compiler.Ast.Statement, languageFeatures: int, ) -> None:
        ...

    def Bind(self, ) -> None:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    def ExposesLocalVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> bool:
        ...

    def FinishBind(self, binder: IronPython.Compiler.Ast.PythonNameBinder, ) -> None:
        ...

    def BindReference(self, binder: IronPython.Compiler.Ast.PythonNameBinder, reference: IronPython.Compiler.Ast.PythonReference, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def TryBindOuter(self, from_: IronPython.Compiler.Ast.ScopeStatement, reference: IronPython.Compiler.Ast.PythonReference, variable: ref[IronPython.Compiler.Ast.PythonVariable], ) -> bool:
        ...

    def EnsureGlobalVariable(self, name: str, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def GetVariableExpression(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> System.Linq.Expressions.Expression:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def GetLambda(self, ) -> Microsoft.Scripting.Ast.LightLambdaExpression:
        ...

    def ToScriptCode(self, ) -> Microsoft.Scripting.ScriptCode:
        ...

    def ReduceWorker(self, ) -> System.Linq.Expressions.Expression:
        ...

    def AddInitialization(self, block: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder[System.Linq.Expressions.Expression], ) -> None:
        ...

    def AddModulePublishing(self, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def GetNames(self, ) -> System.Array[str]:
        ...

    @staticmethod
    def GetCompilationMode(context: Microsoft.Scripting.Runtime.CompilerContext, ) -> IronPython.Compiler.CompilationMode:
        ...

    def GetGlobalContext(self, ) -> System.Linq.Expressions.Expression:
        ...

    def PrepareScope(self, locals: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder[System.Linq.Expressions.ParameterExpression], init: System.Collections.Generic.List[System.Linq.Expressions.Expression], ) -> None:
        ...

    def Constant(self, value: System.Object, ) -> System.Linq.Expressions.Expression:
        ...

    def Convert(self, type: System.Type, resultKind: int, target: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @typing.overload
    def Operation(self, resultType: System.Type, operation: int, arg0: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @typing.overload
    def Operation(self, resultType: System.Type, operation: int, arg0: System.Linq.Expressions.Expression, arg1: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Set(self, name: str, target: System.Linq.Expressions.Expression, value: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Get(self, name: str, target: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Delete(self, resultType: System.Type, name: str, target: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def GetIndex(self, expressions: System.Array[System.Linq.Expressions.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def GetSlice(self, expressions: System.Array[System.Linq.Expressions.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def SetIndex(self, expressions: System.Array[System.Linq.Expressions.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def SetSlice(self, expressions: System.Array[System.Linq.Expressions.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def DeleteIndex(self, expressions: System.Array[System.Linq.Expressions.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def DeleteSlice(self, expressions: System.Array[System.Linq.Expressions.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def MakeLookupCode(self, ) -> IronPython.Compiler.Ast.PythonAst:
        ...

class DelStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Expressions(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, expressions: System.Array[IronPython.Compiler.Ast.Expression], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage007(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage000(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage029(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class CallExpression(Microsoft.Scripting.Interpreter.IInstructionProvider, IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Target(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Args(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def Kwargs(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Keyword]:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, target: IronPython.Compiler.Ast.Expression, args: System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression], kwargs: System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Keyword], ):
        ...

    def SetImplicitArgs(self, args: System.Array[IronPython.Compiler.Ast.Expression], ) -> None:
        ...

    def NeedsLocalsDictionary(self, ) -> bool:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def AddInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ContextStorage000(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Context000: IronPython.Runtime.CodeContext = ...
    Context001: IronPython.Runtime.CodeContext = ...
    Context002: IronPython.Runtime.CodeContext = ...
    Context003: IronPython.Runtime.CodeContext = ...
    Context004: IronPython.Runtime.CodeContext = ...
    Context005: IronPython.Runtime.CodeContext = ...
    Context006: IronPython.Runtime.CodeContext = ...
    Context007: IronPython.Runtime.CodeContext = ...
    Context008: IronPython.Runtime.CodeContext = ...
    Context009: IronPython.Runtime.CodeContext = ...
    Context010: IronPython.Runtime.CodeContext = ...
    Context011: IronPython.Runtime.CodeContext = ...
    Context012: IronPython.Runtime.CodeContext = ...
    Context013: IronPython.Runtime.CodeContext = ...
    Context014: IronPython.Runtime.CodeContext = ...
    Context015: IronPython.Runtime.CodeContext = ...
    Context016: IronPython.Runtime.CodeContext = ...
    Context017: IronPython.Runtime.CodeContext = ...
    Context018: IronPython.Runtime.CodeContext = ...
    Context019: IronPython.Runtime.CodeContext = ...
    Context020: IronPython.Runtime.CodeContext = ...
    Context021: IronPython.Runtime.CodeContext = ...
    Context022: IronPython.Runtime.CodeContext = ...
    Context023: IronPython.Runtime.CodeContext = ...
    Context024: IronPython.Runtime.CodeContext = ...
    Context025: IronPython.Runtime.CodeContext = ...
    Context026: IronPython.Runtime.CodeContext = ...
    Context027: IronPython.Runtime.CodeContext = ...
    Context028: IronPython.Runtime.CodeContext = ...
    Context029: IronPython.Runtime.CodeContext = ...
    Context030: IronPython.Runtime.CodeContext = ...
    Context031: IronPython.Runtime.CodeContext = ...
    Context032: IronPython.Runtime.CodeContext = ...
    Context033: IronPython.Runtime.CodeContext = ...
    Context034: IronPython.Runtime.CodeContext = ...
    Context035: IronPython.Runtime.CodeContext = ...
    Context036: IronPython.Runtime.CodeContext = ...
    Context037: IronPython.Runtime.CodeContext = ...
    Context038: IronPython.Runtime.CodeContext = ...
    Context039: IronPython.Runtime.CodeContext = ...
    Context040: IronPython.Runtime.CodeContext = ...
    Context041: IronPython.Runtime.CodeContext = ...
    Context042: IronPython.Runtime.CodeContext = ...
    Context043: IronPython.Runtime.CodeContext = ...
    Context044: IronPython.Runtime.CodeContext = ...
    Context045: IronPython.Runtime.CodeContext = ...
    Context046: IronPython.Runtime.CodeContext = ...
    Context047: IronPython.Runtime.CodeContext = ...
    Context048: IronPython.Runtime.CodeContext = ...
    Context049: IronPython.Runtime.CodeContext = ...

    # properties
    # methods
class SiteStorage026(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage016(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SetExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Items(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def HasStarredExpression(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, items: System.Array[IronPython.Compiler.Ast.Expression], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class TryStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def HeaderIndex(self) -> int:
        ...
    @HeaderIndex.setter
    def HeaderIndex(self, val: int):
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def Else(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def Finally(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def Handlers(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.TryStatementHandler]:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, body: IronPython.Compiler.Ast.Statement, handlers: System.Array[IronPython.Compiler.Ast.TryStatementHandler], else_: IronPython.Compiler.Ast.Statement, finally_: IronPython.Compiler.Ast.Statement, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def GetVariables(lineUpdated: System.Linq.Expressions.ParameterExpression, runElse: System.Linq.Expressions.ParameterExpression, previousExceptionContext: System.Linq.Expressions.ParameterExpression, ) -> System.Runtime.CompilerServices.ReadOnlyCollectionBuilder[System.Linq.Expressions.ParameterExpression]:
        ...

    def AddFinally(self, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformHandlers(self, exception: System.Linq.Expressions.ParameterExpression, previousException: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def GetTracebackHeader(node: IronPython.Compiler.Ast.Statement, exception: System.Linq.Expressions.ParameterExpression, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class LambdaExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Function(self) -> IronPython.Compiler.Ast.FunctionDefinition:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, function: IronPython.Compiler.Ast.FunctionDefinition, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage025(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStorage006(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class ComprehensionFor(IronPython.Compiler.Ast.ComprehensionIterator):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Left(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def List(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, lhs: IronPython.Compiler.Ast.Expression, list: IronPython.Compiler.Ast.Expression, ):
        ...

    def Transform(self, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class StarredExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Value(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, value: IronPython.Compiler.Ast.Expression, ):
        ...

    def TransformSet(self, span: Microsoft.Scripting.SourceSpan, right: System.Linq.Expressions.Expression, op: int, ) -> System.Linq.Expressions.Expression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def TransformDelete(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage019(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GeneratorExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Function(self) -> IronPython.Compiler.Ast.FunctionDefinition:
        ...

    @property
    def Iterable(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, function: IronPython.Compiler.Ast.FunctionDefinition, iterable: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class GlobalStorage016(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class SiteStorage021(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class UnaryExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Expression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Operator(self) -> int:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, op: int, expression: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    @staticmethod
    def PythonOperatorToOperatorString(op: int, ) -> int:
        ...

class IfStatement(Microsoft.Scripting.Interpreter.IInstructionProvider, IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Tests(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.IfStatementTest]:
        ...

    @property
    def ElseStatement(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, tests: System.Array[IronPython.Compiler.Ast.IfStatementTest], else_: IronPython.Compiler.Ast.Statement, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def AddInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

    def ReduceWorker(self, optimizeDynamicConvert: bool, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SetComprehension(IronPython.Compiler.Ast.Comprehension):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Item(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Iterators(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.ComprehensionIterator]:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def Scope(self) -> IronPython.Compiler.Ast.ComprehensionScope:
        ...
    @Scope.setter
    def Scope(self, val: IronPython.Compiler.Ast.ComprehensionScope):
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, item: IronPython.Compiler.Ast.Expression, iterators: System.Array[IronPython.Compiler.Ast.ComprehensionIterator], ):
        ...

    def MakeParameter(self, ) -> System.Linq.Expressions.ParameterExpression:
        ...

    def Factory(self, ) -> System.Reflection.MethodInfo:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Body(self, res: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class PythonWalkerNonRecursive(IronPython.Compiler.Ast.PythonWalker):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    # methods
    def __init__(self, ):
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AndExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.BinaryExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.CallExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ConditionalExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ConstantExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DictionaryComprehension, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DictionaryExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ErrorExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.FormattedValueExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.GeneratorExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.IndexExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.JoinedStringExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.LambdaExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ListComprehension, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ListExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.MemberExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.NameExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.OrExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ParenthesisExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SetComprehension, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SetExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SliceExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.StarredExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.TupleExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.UnaryExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.YieldExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.YieldFromExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AssertStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AssignmentStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AsyncStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AugmentedAssignStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.BreakStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ClassDefinition, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ContinueStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DelStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.EmptyStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ExpressionStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ForStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.FromImportStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.FunctionDefinition, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.GlobalStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.IfStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ImportStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.NonlocalStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.PythonAst, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.RaiseStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ReturnStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SuiteStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.TryStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.WhileStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.WithStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ComprehensionFor, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ComprehensionIf, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DottedName, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.IfStatementTest, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.Keyword, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ModuleName, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.Parameter, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.RelativeModuleName, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.TryStatementHandler, ) -> bool:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AndExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.BinaryExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.CallExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ConditionalExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ConstantExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DictionaryComprehension, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DictionaryExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ErrorExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.FormattedValueExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.GeneratorExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.IndexExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.JoinedStringExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.LambdaExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ListComprehension, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ListExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.MemberExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.NameExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.OrExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ParenthesisExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SetComprehension, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SetExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SliceExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.StarredExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.TupleExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.UnaryExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.YieldExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.YieldFromExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AssertStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AssignmentStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AsyncStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AugmentedAssignStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.BreakStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ClassDefinition, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ContinueStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DelStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.EmptyStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ExpressionStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ForStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.FromImportStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.FunctionDefinition, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.GlobalStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.IfStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ImportStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.NonlocalStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.PythonAst, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.RaiseStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ReturnStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SuiteStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.TryStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.WhileStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.WithStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ComprehensionFor, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ComprehensionIf, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DottedName, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.IfStatementTest, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.Keyword, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ModuleName, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.Parameter, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.RelativeModuleName, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.TryStatementHandler, ) -> None:
        ...

class ConstantStorage000(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Constant000: System.Object = ...
    Constant001: System.Object = ...
    Constant002: System.Object = ...
    Constant003: System.Object = ...
    Constant004: System.Object = ...
    Constant005: System.Object = ...
    Constant006: System.Object = ...
    Constant007: System.Object = ...
    Constant008: System.Object = ...
    Constant009: System.Object = ...
    Constant010: System.Object = ...
    Constant011: System.Object = ...
    Constant012: System.Object = ...
    Constant013: System.Object = ...
    Constant014: System.Object = ...
    Constant015: System.Object = ...
    Constant016: System.Object = ...
    Constant017: System.Object = ...
    Constant018: System.Object = ...
    Constant019: System.Object = ...
    Constant020: System.Object = ...
    Constant021: System.Object = ...
    Constant022: System.Object = ...
    Constant023: System.Object = ...
    Constant024: System.Object = ...
    Constant025: System.Object = ...
    Constant026: System.Object = ...
    Constant027: System.Object = ...
    Constant028: System.Object = ...
    Constant029: System.Object = ...
    Constant030: System.Object = ...
    Constant031: System.Object = ...
    Constant032: System.Object = ...
    Constant033: System.Object = ...
    Constant034: System.Object = ...
    Constant035: System.Object = ...
    Constant036: System.Object = ...
    Constant037: System.Object = ...
    Constant038: System.Object = ...
    Constant039: System.Object = ...
    Constant040: System.Object = ...
    Constant041: System.Object = ...
    Constant042: System.Object = ...
    Constant043: System.Object = ...
    Constant044: System.Object = ...
    Constant045: System.Object = ...
    Constant046: System.Object = ...
    Constant047: System.Object = ...
    Constant048: System.Object = ...
    Constant049: System.Object = ...

    # properties
    # methods
class Node(System.Linq.Expressions.Expression, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    EmptyBlock: System.Linq.Expressions.BlockExpression = ...
    EmptyExpression: System.Array[System.Linq.Expressions.Expression] = ...
    FunctionStackVariable: System.Linq.Expressions.ParameterExpression = ...
    GeneratorLabel: System.Linq.Expressions.LabelTarget = ...

    # properties
    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def LineNumberUpdated(self) -> System.Linq.Expressions.ParameterExpression:
        ...

    @property
    def LineNumberExpression(self) -> System.Linq.Expressions.ParameterExpression:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, ):
        ...

    @typing.overload
    def SetLoc(self, globalParent: IronPython.Compiler.Ast.PythonAst, start: int, end: int, ) -> None:
        ...

    @typing.overload
    def SetLoc(self, globalParent: IronPython.Compiler.Ast.PythonAst, span: Microsoft.Scripting.IndexSpan, ) -> None:
        ...

    def IndexToLocation(self, index: int, ) -> Microsoft.Scripting.SourceLocation:
        ...

    @abc.abstractmethod
    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    def ToString(self, ) -> str:
        ...

    def GetDocumentation(self, stmt: IronPython.Compiler.Ast.Statement, ) -> str:
        ...

    @staticmethod
    def ToObjectArray(expressions: System.ReadOnlySpan[IronPython.Compiler.Ast.Expression], ) -> System.Array[System.Linq.Expressions.Expression]:
        ...

    @staticmethod
    def ToExpressionArray(expressions: System.ReadOnlySpan[IronPython.Compiler.Ast.Expression], ) -> System.Array[System.Linq.Expressions.Expression]:
        ...

    @staticmethod
    def TransformOrConstantNull(expression: IronPython.Compiler.Ast.Expression, type: System.Type, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformAndDynamicConvert(self, expression: IronPython.Compiler.Ast.Expression, type: System.Type, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def CanAssign(to: System.Type, from_: System.Type, ) -> bool:
        ...

    @staticmethod
    def ConvertIfNeeded(expression: System.Linq.Expressions.Expression, type: System.Type, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def TransformMaybeSingleLineSuite(body: IronPython.Compiler.Ast.Statement, prevStart: Microsoft.Scripting.SourceLocation, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def RemoveDebugInfo(prevStart: int, res: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def AddFrame(localContext: System.Linq.Expressions.Expression, codeObject: System.Linq.Expressions.Expression, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def RemoveFrame(expression: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    @typing.overload
    def MakeAssignment(variable: System.Linq.Expressions.ParameterExpression, right: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @typing.overload
    def MakeAssignment(self, variable: System.Linq.Expressions.ParameterExpression, right: System.Linq.Expressions.Expression, span: Microsoft.Scripting.SourceSpan, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def AssignValue(expression: System.Linq.Expressions.Expression, value: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def Delete(expression: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def UpdateLineNumber(line: int, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def UpdateLineUpdated(updated: bool, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def PushLineUpdated(updated: bool, saveCurrent: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def PopLineUpdated(saveCurrent: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

class SiteStorage013(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class YieldExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Expression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, expression: IronPython.Compiler.Ast.Expression, ):
        ...

    @staticmethod
    def CreateCheckThrowExpression(span: Microsoft.Scripting.SourceSpan, ) -> System.Linq.Expressions.Expression:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ImportStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Variables(self) -> System.Array[IronPython.Compiler.Ast.PythonVariable]:
        ...
    @Variables.setter
    def Variables(self, val: System.Array[IronPython.Compiler.Ast.PythonVariable]):
        ...

    @property
    def Names(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.DottedName]:
        ...

    @property
    def AsNames(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, names: System.Array[IronPython.Compiler.Ast.ModuleName], asNames: System.Array[str], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class FromImportStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Star(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def Root(self) -> IronPython.Compiler.Ast.DottedName:
        ...

    @property
    def IsFromFuture(self) -> bool:
        ...

    @property
    def Names(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def AsNames(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def Variables(self) -> System.Array[IronPython.Compiler.Ast.PythonVariable]:
        ...
    @Variables.setter
    def Variables(self, val: System.Array[IronPython.Compiler.Ast.PythonVariable]):
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, root: IronPython.Compiler.Ast.ModuleName, names: System.Array[str], asNames: System.Array[str], fromFuture: bool, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def GetLevel(self, ) -> System.Object:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class GlobalStorage002(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class GlobalStorage003(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class ComprehensionIf(IronPython.Compiler.Ast.ComprehensionIterator):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Test(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, test: IronPython.Compiler.Ast.Expression, ):
        ...

    def Transform(self, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ListExpression(IronPython.Compiler.Ast.SequenceExpression):
    @typing.overload
    def __init__(self, **kwargs):
        self._items: System.Array[IronPython.Compiler.Ast.Expression]
        ...

    # static fields

    # properties
    @property
    def Items(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def UnsafeItems(self) -> System.Array[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def HasStarredExpression(self) -> bool:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, items: System.Array[IronPython.Compiler.Ast.Expression], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage014(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class BinaryExpression(Microsoft.Scripting.Interpreter.IInstructionProvider, IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Left(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Right(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Operator(self) -> int:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, op: int, left: IronPython.Compiler.Ast.Expression, right: IronPython.Compiler.Ast.Expression, ):
        ...

    @typing.overload
    def IsComparison(self, ) -> bool:
        ...

    @staticmethod
    @typing.overload
    def IsComparison(expression: IronPython.Compiler.Ast.Expression, ) -> bool:
        ...

    def NeedComparisonTransformation(self, ) -> bool:
        ...

    def FinishCompare(self, left: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def AddInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

    def MakeBinaryOperation(self, op: int, left: System.Linq.Expressions.Expression, right: System.Linq.Expressions.Expression, span: Microsoft.Scripting.SourceSpan, ) -> System.Linq.Expressions.Expression:
        ...

    def CanEmitWarning(self, op: int, ) -> bool:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    @staticmethod
    def PythonOperatorToAction(op: int, ) -> int:
        ...

    @staticmethod
    def GetHelperMethod(op: int, ) -> System.Reflection.MethodInfo:
        ...

    def ConstantFold(self, ) -> IronPython.Compiler.Ast.ConstantExpression:
        ...

class DictionaryExpression(Microsoft.Scripting.Interpreter.IInstructionProvider, IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Items(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.SliceExpression]:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, items: System.Array[IronPython.Compiler.Ast.SliceExpression], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def ReduceDictionaryWithUnpack(context: System.Linq.Expressions.Expression, items: System.ReadOnlySpan[IronPython.Compiler.Ast.SliceExpression], ) -> System.Linq.Expressions.Expression:
        ...

    @staticmethod
    def ReduceDictionaryWithItems(items: System.ReadOnlySpan[IronPython.Compiler.Ast.SliceExpression], ) -> System.Linq.Expressions.Expression:
        ...

    def ReduceConstant(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    def AddInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

class AsyncStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ConstantStorage002(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Constant000: System.Object = ...
    Constant001: System.Object = ...
    Constant002: System.Object = ...
    Constant003: System.Object = ...
    Constant004: System.Object = ...
    Constant005: System.Object = ...
    Constant006: System.Object = ...
    Constant007: System.Object = ...
    Constant008: System.Object = ...
    Constant009: System.Object = ...
    Constant010: System.Object = ...
    Constant011: System.Object = ...
    Constant012: System.Object = ...
    Constant013: System.Object = ...
    Constant014: System.Object = ...
    Constant015: System.Object = ...
    Constant016: System.Object = ...
    Constant017: System.Object = ...
    Constant018: System.Object = ...
    Constant019: System.Object = ...
    Constant020: System.Object = ...
    Constant021: System.Object = ...
    Constant022: System.Object = ...
    Constant023: System.Object = ...
    Constant024: System.Object = ...
    Constant025: System.Object = ...
    Constant026: System.Object = ...
    Constant027: System.Object = ...
    Constant028: System.Object = ...
    Constant029: System.Object = ...
    Constant030: System.Object = ...
    Constant031: System.Object = ...
    Constant032: System.Object = ...
    Constant033: System.Object = ...
    Constant034: System.Object = ...
    Constant035: System.Object = ...
    Constant036: System.Object = ...
    Constant037: System.Object = ...
    Constant038: System.Object = ...
    Constant039: System.Object = ...
    Constant040: System.Object = ...
    Constant041: System.Object = ...
    Constant042: System.Object = ...
    Constant043: System.Object = ...
    Constant044: System.Object = ...
    Constant045: System.Object = ...
    Constant046: System.Object = ...
    Constant047: System.Object = ...
    Constant048: System.Object = ...
    Constant049: System.Object = ...

    # properties
    # methods
class SliceExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def SliceStart(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def SliceStop(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def SliceStep(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, start: IronPython.Compiler.Ast.Expression, stop: IronPython.Compiler.Ast.Expression, step: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class TryStatementHandler(IronPython.Compiler.Ast.Node):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Header(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def HeaderIndex(self) -> int:
        ...
    @HeaderIndex.setter
    def HeaderIndex(self, val: int):
        ...

    @property
    def Test(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Target(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, test: IronPython.Compiler.Ast.Expression, target: IronPython.Compiler.Ast.Expression, body: IronPython.Compiler.Ast.Statement, ):
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class GlobalStorage017(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class ConstantStorage001(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Constant000: System.Object = ...
    Constant001: System.Object = ...
    Constant002: System.Object = ...
    Constant003: System.Object = ...
    Constant004: System.Object = ...
    Constant005: System.Object = ...
    Constant006: System.Object = ...
    Constant007: System.Object = ...
    Constant008: System.Object = ...
    Constant009: System.Object = ...
    Constant010: System.Object = ...
    Constant011: System.Object = ...
    Constant012: System.Object = ...
    Constant013: System.Object = ...
    Constant014: System.Object = ...
    Constant015: System.Object = ...
    Constant016: System.Object = ...
    Constant017: System.Object = ...
    Constant018: System.Object = ...
    Constant019: System.Object = ...
    Constant020: System.Object = ...
    Constant021: System.Object = ...
    Constant022: System.Object = ...
    Constant023: System.Object = ...
    Constant024: System.Object = ...
    Constant025: System.Object = ...
    Constant026: System.Object = ...
    Constant027: System.Object = ...
    Constant028: System.Object = ...
    Constant029: System.Object = ...
    Constant030: System.Object = ...
    Constant031: System.Object = ...
    Constant032: System.Object = ...
    Constant033: System.Object = ...
    Constant034: System.Object = ...
    Constant035: System.Object = ...
    Constant036: System.Object = ...
    Constant037: System.Object = ...
    Constant038: System.Object = ...
    Constant039: System.Object = ...
    Constant040: System.Object = ...
    Constant041: System.Object = ...
    Constant042: System.Object = ...
    Constant043: System.Object = ...
    Constant044: System.Object = ...
    Constant045: System.Object = ...
    Constant046: System.Object = ...
    Constant047: System.Object = ...
    Constant048: System.Object = ...
    Constant049: System.Object = ...

    # properties
    # methods
class SiteStorage009(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStorage008(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class ConstantStorage003(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Constant000: System.Object = ...
    Constant001: System.Object = ...
    Constant002: System.Object = ...
    Constant003: System.Object = ...
    Constant004: System.Object = ...
    Constant005: System.Object = ...
    Constant006: System.Object = ...
    Constant007: System.Object = ...
    Constant008: System.Object = ...
    Constant009: System.Object = ...
    Constant010: System.Object = ...
    Constant011: System.Object = ...
    Constant012: System.Object = ...
    Constant013: System.Object = ...
    Constant014: System.Object = ...
    Constant015: System.Object = ...
    Constant016: System.Object = ...
    Constant017: System.Object = ...
    Constant018: System.Object = ...
    Constant019: System.Object = ...
    Constant020: System.Object = ...
    Constant021: System.Object = ...
    Constant022: System.Object = ...
    Constant023: System.Object = ...
    Constant024: System.Object = ...
    Constant025: System.Object = ...
    Constant026: System.Object = ...
    Constant027: System.Object = ...
    Constant028: System.Object = ...
    Constant029: System.Object = ...
    Constant030: System.Object = ...
    Constant031: System.Object = ...
    Constant032: System.Object = ...
    Constant033: System.Object = ...
    Constant034: System.Object = ...
    Constant035: System.Object = ...
    Constant036: System.Object = ...
    Constant037: System.Object = ...
    Constant038: System.Object = ...
    Constant039: System.Object = ...
    Constant040: System.Object = ...
    Constant041: System.Object = ...
    Constant042: System.Object = ...
    Constant043: System.Object = ...
    Constant044: System.Object = ...
    Constant045: System.Object = ...
    Constant046: System.Object = ...
    Constant047: System.Object = ...
    Constant048: System.Object = ...
    Constant049: System.Object = ...

    # properties
    # methods
class SiteStorage015(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStorage019(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class GlobalStorage014(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class RaiseStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Exception(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Cause(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def InFinally(self) -> bool:
        ...
    @InFinally.setter
    def InFinally(self, val: bool):
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, exception: IronPython.Compiler.Ast.Expression, cause: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class NonlocalStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Names(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, names: System.Array[str], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ListComprehension(IronPython.Compiler.Ast.Comprehension):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Item(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Iterators(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.ComprehensionIterator]:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def Scope(self) -> IronPython.Compiler.Ast.ComprehensionScope:
        ...
    @Scope.setter
    def Scope(self, val: IronPython.Compiler.Ast.ComprehensionScope):
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, item: IronPython.Compiler.Ast.Expression, iterators: System.Array[IronPython.Compiler.Ast.ComprehensionIterator], ):
        ...

    def MakeParameter(self, ) -> System.Linq.Expressions.ParameterExpression:
        ...

    def Factory(self, ) -> System.Reflection.MethodInfo:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Body(self, res: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class WithStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    HeaderIndex: int = property(None, lambda val: ...)

    @property
    def Variable(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def ContextManager(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, contextManager: IronPython.Compiler.Ast.Expression, var: IronPython.Compiler.Ast.Expression, body: IronPython.Compiler.Ast.Statement, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def MakeExitCall(self, exit: System.Linq.Expressions.ParameterExpression, exception: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ReturnStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Expression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, expression: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SequenceExpression(IronPython.Compiler.Ast.Expression, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        self._items: System.Array[IronPython.Compiler.Ast.Expression]
        ...

    # static fields

    # properties
    @property
    def Items(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def UnsafeItems(self) -> System.Array[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def HasStarredExpression(self) -> bool:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, items: System.Array[IronPython.Compiler.Ast.Expression], ):
        ...

    def TransformSet(self, span: Microsoft.Scripting.SourceSpan, right: System.Linq.Expressions.Expression, op: int, ) -> System.Linq.Expressions.Expression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def CheckAugmentedAssign(self, ) -> str:
        ...

    @staticmethod
    def IsComplexAssignment(expr: IronPython.Compiler.Ast.Expression, ) -> bool:
        ...

    def TransformDelete(self, ) -> System.Linq.Expressions.Expression:
        ...

class AndExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Left(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Right(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, left: IronPython.Compiler.Ast.Expression, right: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage004(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage020(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStorage013(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class Keyword(IronPython.Compiler.Ast.Node):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Name(self) -> str:
        ...

    @property
    def Expression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, name: str, expression: IronPython.Compiler.Ast.Expression, ):
        ...

    def ToString(self, ) -> str:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ExpressionStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Expression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, expression: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def ReduceWorker(self, expression: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class GlobalStorage018(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class NameExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Name(self) -> str:
        ...

    @property
    def Reference(self) -> IronPython.Compiler.Ast.PythonReference:
        ...
    @Reference.setter
    def Reference(self, val: IronPython.Compiler.Ast.PythonReference):
        ...

    @property
    def Assigned(self) -> bool:
        ...
    @Assigned.setter
    def Assigned(self, val: bool):
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, name: str, ):
        ...

    def ToString(self, ) -> str:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformSet(self, span: Microsoft.Scripting.SourceSpan, right: System.Linq.Expressions.Expression, op: int, ) -> System.Linq.Expressions.Expression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def TransformDelete(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage018(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage017(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStorage015(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class SiteStorage010(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class PythonWalker(System.Object):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    # methods
    def __init__(self, ):
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AndExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.BinaryExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.CallExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ConditionalExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ConstantExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DictionaryComprehension, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DictionaryExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ErrorExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.FormattedValueExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.GeneratorExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.IndexExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.JoinedStringExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.LambdaExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ListComprehension, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ListExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.MemberExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.NameExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.OrExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ParenthesisExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SetComprehension, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SetExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SliceExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.StarredExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.TupleExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.UnaryExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.YieldExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.YieldFromExpression, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AssertStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AssignmentStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AsyncStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.AugmentedAssignStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.BreakStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ClassDefinition, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ContinueStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DelStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.EmptyStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ExpressionStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ForStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.FromImportStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.FunctionDefinition, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.GlobalStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.IfStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ImportStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.NonlocalStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.PythonAst, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.RaiseStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ReturnStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.SuiteStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.TryStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.WhileStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.WithStatement, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ComprehensionFor, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ComprehensionIf, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.DottedName, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.IfStatementTest, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.Keyword, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.ModuleName, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.Parameter, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.RelativeModuleName, ) -> bool:
        ...

    @typing.overload
    def Walk(self, node: IronPython.Compiler.Ast.TryStatementHandler, ) -> bool:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AndExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.BinaryExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.CallExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ConditionalExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ConstantExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DictionaryComprehension, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DictionaryExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ErrorExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.FormattedValueExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.GeneratorExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.IndexExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.JoinedStringExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.LambdaExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ListComprehension, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ListExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.MemberExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.NameExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.OrExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ParenthesisExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SetComprehension, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SetExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SliceExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.StarredExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.TupleExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.UnaryExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.YieldExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.YieldFromExpression, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AssertStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AssignmentStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AsyncStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.AugmentedAssignStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.BreakStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ClassDefinition, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ContinueStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DelStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.EmptyStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ExpressionStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ForStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.FromImportStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.FunctionDefinition, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.GlobalStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.IfStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ImportStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.NonlocalStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.PythonAst, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.RaiseStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ReturnStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.SuiteStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.TryStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.WhileStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.WithStatement, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ComprehensionFor, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ComprehensionIf, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.DottedName, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.IfStatementTest, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.Keyword, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.ModuleName, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.Parameter, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.RelativeModuleName, ) -> None:
        ...

    @typing.overload
    def PostWalk(self, node: IronPython.Compiler.Ast.TryStatementHandler, ) -> None:
        ...

class SiteStorage008(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class JoinedStringExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Values(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, values: System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ConditionalExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def FalseExpression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Test(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def TrueExpression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, testExpression: IronPython.Compiler.Ast.Expression, trueExpression: IronPython.Compiler.Ast.Expression, falseExpression: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class FormattedValueExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Value(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Conversion(self) -> System.Nullable[str]:
        ...

    @property
    def FormatSpec(self) -> IronPython.Compiler.Ast.JoinedStringExpression:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, value: IronPython.Compiler.Ast.Expression, conversion: System.Nullable[str], formatSpec: IronPython.Compiler.Ast.JoinedStringExpression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class VariableKind(enum.Enum, System.IComparable, System.IFormattable, System.IConvertible, System.Enum):
    Local: int = ...
    Parameter: int = ...
    Global: int = ...
    Nonlocal: int = ...

class ErrorExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ConstantExpression(Microsoft.Scripting.Interpreter.IInstructionProvider, IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Value(self) -> System.Object:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, value: System.Object, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def ConstantFold(self, ) -> IronPython.Compiler.Ast.ConstantExpression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    def GetConstantValue(self, ) -> System.Object:
        ...

    def AddInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

class RelativeModuleName(IronPython.Compiler.Ast.ModuleName):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def DotCount(self) -> int:
        ...

    @property
    def Names(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, names: System.Array[str], dotCount: int, ):
        ...

class SiteStorage003(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class ParameterKind(enum.Enum, System.IComparable, System.IFormattable, System.IConvertible, System.Enum):
    Normal: int = ...
    List: int = ...
    Dictionary: int = ...
    KeywordOnly: int = ...

class SiteStorage024(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class GlobalStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Names(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, names: System.Array[str], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class IfStatementTest(IronPython.Compiler.Ast.Node):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Header(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def HeaderIndex(self) -> int:
        ...
    @HeaderIndex.setter
    def HeaderIndex(self, val: int):
        ...

    @property
    def Test(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...
    @Body.setter
    def Body(self, val: IronPython.Compiler.Ast.Statement):
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, test: IronPython.Compiler.Ast.Expression, body: IronPython.Compiler.Ast.Statement, ):
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class EmptyStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    PreCompiledInstance: IronPython.Compiler.Ast.EmptyStatement = ...

    # properties
    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ScopeStatement(IronPython.Compiler.Ast.Statement, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        self._variableMapping: System.Collections.Generic.Dictionary[IronPython.Compiler.Ast.PythonVariable, System.Linq.Expressions.Expression]
        ...

    # static fields
    LocalCodeContextVariable: System.Linq.Expressions.ParameterExpression = ...
    NameForExec: str = ...

    # properties
    @property
    def ContainsImportStar(self) -> bool:
        ...
    @ContainsImportStar.setter
    def ContainsImportStar(self, val: bool):
        ...

    @property
    def ContainsExceptionHandling(self) -> bool:
        ...
    @ContainsExceptionHandling.setter
    def ContainsExceptionHandling(self, val: bool):
        ...

    @property
    def IsGeneratorMethod(self) -> bool:
        ...

    @property
    def LocalParentTuple(self) -> System.Linq.Expressions.ParameterExpression:
        ...
    @LocalParentTuple.setter
    def LocalParentTuple(self, val: System.Linq.Expressions.ParameterExpression):
        ...

    @property
    def LocalContext(self) -> System.Linq.Expressions.Expression:
        ...

    @property
    def IsClosure(self) -> bool:
        ...

    @property
    def ContainsNestedFreeVariables(self) -> bool:
        ...
    @ContainsNestedFreeVariables.setter
    def ContainsNestedFreeVariables(self, val: bool):
        ...

    @property
    def NeedsLocalsDictionary(self) -> bool:
        ...
    @NeedsLocalsDictionary.setter
    def NeedsLocalsDictionary(self, val: bool):
        ...

    @property
    def Name(self) -> str:
        ...

    @property
    def Filename(self) -> str:
        ...

    @property
    def HasLateBoundVariableSets(self) -> bool:
        ...
    @HasLateBoundVariableSets.setter
    def HasLateBoundVariableSets(self, val: bool):
        ...

    @property
    def Variables(self) -> System.Collections.Generic.Dictionary[str, IronPython.Compiler.Ast.PythonVariable]:
        ...
    @Variables.setter
    def Variables(self, val: System.Collections.Generic.Dictionary[str, IronPython.Compiler.Ast.PythonVariable]):
        ...

    @property
    def IsGlobal(self) -> bool:
        ...

    @property
    def NeedsLocalContext(self) -> bool:
        ...

    @property
    def ParameterNames(self) -> System.Array[str]:
        ...

    @property
    def ArgCount(self) -> int:
        ...

    @property
    def KwOnlyArgCount(self) -> int:
        ...

    @property
    def Flags(self) -> int:
        ...

    @property
    def ScopeDocumentation(self) -> str:
        ...

    @property
    def OriginalDelegate(self) -> System.Delegate:
        ...

    @property
    def ShouldInterpret(self) -> bool:
        ...
    @ShouldInterpret.setter
    def ShouldInterpret(self, val: bool):
        ...

    @property
    def FreeVariables(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.PythonVariable]:
        ...

    @property
    def GlobalVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def CellVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def TupleCells(self) -> int:
        ...

    @property
    def PyContext(self) -> IronPython.Runtime.PythonContext:
        ...

    @property
    def Document(self) -> System.Linq.Expressions.SymbolDocumentInfo:
        ...

    @property
    def FuncCodeExpr(self) -> System.Linq.Expressions.Expression:
        ...
    @FuncCodeExpr.setter
    def FuncCodeExpr(self, val: System.Linq.Expressions.Expression):
        ...

    @property
    def PrintExpressions(self) -> bool:
        ...

    @property
    def ProfilerName(self) -> str:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    @abc.abstractmethod
    def GetLambda(self, ) -> Microsoft.Scripting.Ast.LightLambdaExpression:
        ...

    def GetOrMakeFunctionCode(self, ) -> IronPython.Runtime.FunctionCode:
        ...

    def GetVarNames(self, ) -> System.Collections.Generic.IList[str]:
        ...

    def AddFreeVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, accessedInScope: bool, ) -> None:
        ...

    def AddReferencedGlobal(self, name: str, ) -> str:
        ...

    def AddCellVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> None:
        ...

    def AppendVariables(self, res: System.Collections.Generic.List[str], ) -> System.Collections.Generic.List[str]:
        ...

    def GetClosureTupleType(self, ) -> System.Type:
        ...

    @abc.abstractmethod
    def ExposesLocalVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> bool:
        ...

    def GetParentClosureTuple(self, ) -> System.Linq.Expressions.Expression:
        ...

    def TryGetAnyVariable(self, name: str, variable: ref[IronPython.Compiler.Ast.PythonVariable], ) -> bool:
        ...

    def TryGetVariable(self, name: str, variable: ref[IronPython.Compiler.Ast.PythonVariable], ) -> bool:
        ...

    def TryBindOuter(self, from_: IronPython.Compiler.Ast.ScopeStatement, reference: IronPython.Compiler.Ast.PythonReference, variable: ref[IronPython.Compiler.Ast.PythonVariable], ) -> bool:
        ...

    @abc.abstractmethod
    def BindReference(self, binder: IronPython.Compiler.Ast.PythonNameBinder, reference: IronPython.Compiler.Ast.PythonReference, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def Bind(self, binder: IronPython.Compiler.Ast.PythonNameBinder, ) -> None:
        ...

    def FinishBind(self, binder: IronPython.Compiler.Ast.PythonNameBinder, ) -> None:
        ...

    @staticmethod
    def HasClosureVariable(closureVariables: System.Collections.Generic.List[IronPython.Compiler.Ast.ScopeStatement.ClosureInfo], variable: IronPython.Compiler.Ast.PythonVariable, ) -> bool:
        ...

    def EnsureVariables(self, ) -> None:
        ...

    def AddGlobalVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> None:
        ...

    def Reference(self, name: str, ) -> IronPython.Compiler.Ast.PythonReference:
        ...

    def IsReferenced(self, name: str, ) -> bool:
        ...

    def IsFreeVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> bool:
        ...

    def TryGetNonlocalStatement(self, name: str, node: ref[IronPython.Compiler.Ast.NonlocalStatement], ) -> bool:
        ...

    def CreateVariable(self, name: str, kind: int, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def EnsureVariable(self, name: str, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def CreateNonlocalVariable(self, name: str, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def EnsureNonlocalVariable(self, name: str, node: IronPython.Compiler.Ast.NonlocalStatement, ) -> None:
        ...

    def DefineParameter(self, name: str, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    @typing.overload
    def AddDebugInfo(self, expression: System.Linq.Expressions.Expression, start: Microsoft.Scripting.SourceLocation, end: Microsoft.Scripting.SourceLocation, ) -> System.Linq.Expressions.Expression:
        ...

    @typing.overload
    def AddDebugInfo(self, expression: System.Linq.Expressions.Expression, location: Microsoft.Scripting.SourceSpan, ) -> System.Linq.Expressions.Expression:
        ...

    def AddDebugInfoAndVoid(self, expression: System.Linq.Expressions.Expression, location: Microsoft.Scripting.SourceSpan, ) -> System.Linq.Expressions.Expression:
        ...

    def GetUpdateTrackbackExpression(self, exception: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    def UpdateStackTrace(self, exception: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    def GetSaveLineNumberExpression(self, exception: System.Linq.Expressions.ParameterExpression, preventAdditionalAdds: bool, ) -> System.Linq.Expressions.Expression:
        ...

    def WrapScopeStatements(self, body: System.Linq.Expressions.Expression, canThrow: bool, ) -> System.Linq.Expressions.Expression:
        ...

    def CreateLocalContext(self, parentContext: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.MethodCallExpression:
        ...

    def GetClosureCell(self, variable: IronPython.Compiler.Ast.ScopeStatement.ClosureInfo, ) -> System.Linq.Expressions.Expression:
        ...

    def GetVariableExpression(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> System.Linq.Expressions.Expression:
        ...

    def LookupVariableExpression(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> System.Linq.Expressions.Expression:
        ...

    def CreateVariables(self, locals: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder[System.Linq.Expressions.ParameterExpression], init: System.Collections.Generic.List[System.Linq.Expressions.Expression], ) -> None:
        ...

    def AddDecorators(self, ret: System.Linq.Expressions.Expression, decorators: System.Collections.Generic.IList[IronPython.Compiler.Ast.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def Invoke(self, signature: Microsoft.Scripting.Actions.CallSignature, args: System.Array[System.Linq.Expressions.Expression], ) -> System.Linq.Expressions.Expression:
        ...

    def CopyForRewrite(self, ) -> IronPython.Compiler.Ast.ScopeStatement:
        ...

    def RewriteBody(self, visitor: System.Linq.Expressions.ExpressionVisitor, ) -> None:
        ...

    def AddProfiling(self, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

class PythonVariable(System.Object):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Name(self) -> str:
        ...

    @property
    def Scope(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...

    @property
    def Kind(self) -> int:
        ...
    @Kind.setter
    def Kind(self, val: int):
        ...

    @property
    def LimitVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    @property
    def MaybeDeleted(self) -> bool:
        ...
    @MaybeDeleted.setter
    def MaybeDeleted(self, val: bool):
        ...

    @property
    def Index(self) -> int:
        ...
    @Index.setter
    def Index(self, val: int):
        ...

    @property
    def ReadBeforeInitialized(self) -> bool:
        ...
    @ReadBeforeInitialized.setter
    def ReadBeforeInitialized(self, val: bool):
        ...

    @property
    def AccessedInNestedScope(self) -> bool:
        ...
    @AccessedInNestedScope.setter
    def AccessedInNestedScope(self, val: bool):
        ...

    # methods
    def __init__(self, name: str, kind: int, scope: IronPython.Compiler.Ast.ScopeStatement, ):
        ...

    def LiftToGlobal(self, ) -> None:
        ...

    def RegisterDeletion(self, ) -> None:
        ...

class ConstantStorage004(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Constant000: System.Object = ...
    Constant001: System.Object = ...
    Constant002: System.Object = ...
    Constant003: System.Object = ...
    Constant004: System.Object = ...
    Constant005: System.Object = ...
    Constant006: System.Object = ...
    Constant007: System.Object = ...
    Constant008: System.Object = ...
    Constant009: System.Object = ...
    Constant010: System.Object = ...
    Constant011: System.Object = ...
    Constant012: System.Object = ...
    Constant013: System.Object = ...
    Constant014: System.Object = ...
    Constant015: System.Object = ...
    Constant016: System.Object = ...
    Constant017: System.Object = ...
    Constant018: System.Object = ...
    Constant019: System.Object = ...
    Constant020: System.Object = ...
    Constant021: System.Object = ...
    Constant022: System.Object = ...
    Constant023: System.Object = ...
    Constant024: System.Object = ...
    Constant025: System.Object = ...
    Constant026: System.Object = ...
    Constant027: System.Object = ...
    Constant028: System.Object = ...
    Constant029: System.Object = ...
    Constant030: System.Object = ...
    Constant031: System.Object = ...
    Constant032: System.Object = ...
    Constant033: System.Object = ...
    Constant034: System.Object = ...
    Constant035: System.Object = ...
    Constant036: System.Object = ...
    Constant037: System.Object = ...
    Constant038: System.Object = ...
    Constant039: System.Object = ...
    Constant040: System.Object = ...
    Constant041: System.Object = ...
    Constant042: System.Object = ...
    Constant043: System.Object = ...
    Constant044: System.Object = ...
    Constant045: System.Object = ...
    Constant046: System.Object = ...
    Constant047: System.Object = ...
    Constant048: System.Object = ...
    Constant049: System.Object = ...

    # properties
    # methods
class IndexExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Target(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Index(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def IsSlice(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, target: IronPython.Compiler.Ast.Expression, index: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def GetActionArgumentsForGetOrDelete(self, ) -> System.Array[System.Linq.Expressions.Expression]:
        ...

    @staticmethod
    def GetSliceValue(expr: IronPython.Compiler.Ast.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def GetActionArgumentsForSet(self, right: System.Linq.Expressions.Expression, ) -> System.Array[System.Linq.Expressions.Expression]:
        ...

    def TransformSet(self, span: Microsoft.Scripting.SourceSpan, right: System.Linq.Expressions.Expression, op: int, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformDelete(self, ) -> System.Linq.Expressions.Expression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class Parameter(IronPython.Compiler.Ast.Node):
    @typing.overload
    def __init__(self, **kwargs):
        self._kind: int
        self._defaultValue: IronPython.Compiler.Ast.Expression
        ...

    # static fields

    # properties
    @property
    def Name(self) -> str:
        ...

    @property
    def Annotation(self) -> IronPython.Compiler.Ast.Expression:
        ...
    @Annotation.setter
    def Annotation(self, val: IronPython.Compiler.Ast.Expression):
        ...

    @property
    def DefaultValue(self) -> IronPython.Compiler.Ast.Expression:
        ...
    @DefaultValue.setter
    def DefaultValue(self, val: IronPython.Compiler.Ast.Expression):
        ...

    @property
    def IsList(self) -> bool:
        ...

    @property
    def IsDictionary(self) -> bool:
        ...

    @property
    def IsKeywordOnly(self) -> bool:
        ...

    @property
    def Kind(self) -> int:
        ...

    @property
    def PythonVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @PythonVariable.setter
    def PythonVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def ParameterExpression(self) -> System.Linq.Expressions.ParameterExpression:
        ...
    @ParameterExpression.setter
    def ParameterExpression(self, val: System.Linq.Expressions.ParameterExpression):
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    @typing.overload
    def __init__(self, name: str, ):
        ...

    @typing.overload
    def __init__(self, name: str, kind: int, ):
        ...

    def FinishBind(self, needsLocalsDictionary: bool, ) -> System.Linq.Expressions.Expression:
        ...

    def Init(self, init: System.Collections.Generic.List[System.Linq.Expressions.Expression], ) -> None:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class GlobalStorage007(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class GlobalStorage009(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class GlobalStorage000(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class GlobalStorage011(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class Comprehension(IronPython.Compiler.Ast.Expression, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    @abc.abstractmethod
    def Iterators(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.ComprehensionIterator]:
        ...

    @property
    @abc.abstractmethod
    def NodeName(self) -> str:
        ...

    @property
    def Scope(self) -> IronPython.Compiler.Ast.ComprehensionScope:
        ...
    @Scope.setter
    def Scope(self, val: IronPython.Compiler.Ast.ComprehensionScope):
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    @abc.abstractmethod
    def MakeParameter(self, ) -> System.Linq.Expressions.ParameterExpression:
        ...

    @abc.abstractmethod
    def Factory(self, ) -> System.Reflection.MethodInfo:
        ...

    @abc.abstractmethod
    def Body(self, res: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    @abc.abstractmethod
    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def CopyForRewrite(self, scope: IronPython.Compiler.Ast.ComprehensionScope, ) -> IronPython.Compiler.Ast.Comprehension:
        ...

class YieldFromExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Expression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, expression: IronPython.Compiler.Ast.Expression, ):
        ...

    @staticmethod
    def GenYieldFromStatement(expression: IronPython.Compiler.Ast.Expression, ) -> IronPython.Compiler.Ast.Statement:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage022(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class TupleExpression(IronPython.Compiler.Ast.SequenceExpression):
    @typing.overload
    def __init__(self, **kwargs):
        self._items: System.Array[IronPython.Compiler.Ast.Expression]
        ...

    # static fields

    # properties
    @property
    def IsExpandable(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Items(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def UnsafeItems(self) -> System.Array[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def HasStarredExpression(self) -> bool:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, expandable: bool, items: System.Array[IronPython.Compiler.Ast.Expression], ):
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    def GetConstantValue(self, ) -> System.Object:
        ...

class OrExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Left(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Right(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, left: IronPython.Compiler.Ast.Expression, right: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ComprehensionIterator(IronPython.Compiler.Ast.Node, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, ):
        ...

    @abc.abstractmethod
    def Transform(self, body: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

class SiteStorage005(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class DictionaryComprehension(IronPython.Compiler.Ast.Comprehension):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Key(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Value(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Iterators(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.ComprehensionIterator]:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def Scope(self) -> IronPython.Compiler.Ast.ComprehensionScope:
        ...
    @Scope.setter
    def Scope(self, val: IronPython.Compiler.Ast.ComprehensionScope):
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, key: IronPython.Compiler.Ast.Expression, value: IronPython.Compiler.Ast.Expression, iterators: System.Array[IronPython.Compiler.Ast.ComprehensionIterator], ):
        ...

    def MakeParameter(self, ) -> System.Linq.Expressions.ParameterExpression:
        ...

    def Factory(self, ) -> System.Reflection.MethodInfo:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Body(self, res: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SiteStorage028(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage023(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class DottedName(IronPython.Compiler.Ast.Node):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Names(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, names: System.Array[str], ):
        ...

    def MakeString(self, ) -> str:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class GlobalStorage005(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class ForStatement(IronPython.Compiler.Ast.ILoopStatement, IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def HeaderIndex(self) -> int:
        ...
    @HeaderIndex.setter
    def HeaderIndex(self, val: int):
        ...

    @property
    def Left(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...
    @Body.setter
    def Body(self, val: IronPython.Compiler.Ast.Statement):
        ...

    @property
    def List(self) -> IronPython.Compiler.Ast.Expression:
        ...
    @List.setter
    def List(self, val: IronPython.Compiler.Ast.Expression):
        ...

    @property
    def Else(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def BreakLabel(self) -> System.Linq.Expressions.LabelTarget:
        ...
    @BreakLabel.setter
    def BreakLabel(self, val: System.Linq.Expressions.LabelTarget):
        ...

    @property
    def ContinueLabel(self) -> System.Linq.Expressions.LabelTarget:
        ...
    @ContinueLabel.setter
    def ContinueLabel(self, val: System.Linq.Expressions.LabelTarget):
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, left: IronPython.Compiler.Ast.Expression, list: IronPython.Compiler.Ast.Expression, body: IronPython.Compiler.Ast.Statement, else_: IronPython.Compiler.Ast.Statement, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    @staticmethod
    def TransformFor(parent: IronPython.Compiler.Ast.ScopeStatement, enumerator: System.Linq.Expressions.ParameterExpression, list: IronPython.Compiler.Ast.Expression, left: IronPython.Compiler.Ast.Expression, body: System.Linq.Expressions.Expression, else_: IronPython.Compiler.Ast.Statement, span: Microsoft.Scripting.SourceSpan, header: Microsoft.Scripting.SourceLocation, breakLabel: System.Linq.Expressions.LabelTarget, continueLabel: System.Linq.Expressions.LabelTarget, isStatement: bool, ) -> System.Linq.Expressions.Expression:
        ...

class WhileStatement(IronPython.Compiler.Ast.ILoopStatement, Microsoft.Scripting.Interpreter.IInstructionProvider, IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Test(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def ElseStatement(self) -> IronPython.Compiler.Ast.Statement:
        ...

    @property
    def Header(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def BreakLabel(self) -> System.Linq.Expressions.LabelTarget:
        ...
    @BreakLabel.setter
    def BreakLabel(self, val: System.Linq.Expressions.LabelTarget):
        ...

    @property
    def ContinueLabel(self) -> System.Linq.Expressions.LabelTarget:
        ...
    @ContinueLabel.setter
    def ContinueLabel(self, val: System.Linq.Expressions.LabelTarget):
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, test: IronPython.Compiler.Ast.Expression, body: IronPython.Compiler.Ast.Statement, else_: IronPython.Compiler.Ast.Statement, ):
        ...

    def SetLoc(self, globalParent: IronPython.Compiler.Ast.PythonAst, start: int, header: int, end: int, ) -> None:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def AddInstructions(self, compiler: Microsoft.Scripting.Interpreter.LightCompiler, ) -> None:
        ...

    def ReduceWorker(self, optimizeDynamicConvert: bool, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class GlobalStorage012(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class AssignmentStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Left(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def Right(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, left: System.Array[IronPython.Compiler.Ast.Expression], right: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def AssignComplex(self, right: System.Linq.Expressions.Expression, ) -> System.Linq.Expressions.Expression:
        ...

    def AssignOne(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class Expression(IronPython.Compiler.Ast.Node, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    @staticmethod
    def UnpackSequenceHelper(items: System.ReadOnlySpan[IronPython.Compiler.Ast.Expression], makeEmpty: System.Reflection.MethodInfo, append: System.Reflection.MethodInfo, extend: System.Reflection.MethodInfo, ) -> System.Linq.Expressions.BlockExpression:
        ...

    def TransformSet(self, span: Microsoft.Scripting.SourceSpan, right: System.Linq.Expressions.Expression, op: int, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformDelete(self, ) -> System.Linq.Expressions.Expression:
        ...

    def ConstantFold(self, ) -> IronPython.Compiler.Ast.ConstantExpression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckAugmentedAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def GetConstantValue(self, ) -> System.Object:
        ...

class BreakStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def LoopStatement(self) -> IronPython.Compiler.Ast.ILoopStatement:
        ...
    @LoopStatement.setter
    def LoopStatement(self, val: IronPython.Compiler.Ast.ILoopStatement):
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ContinueStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def LoopStatement(self) -> IronPython.Compiler.Ast.ILoopStatement:
        ...
    @LoopStatement.setter
    def LoopStatement(self, val: IronPython.Compiler.Ast.ILoopStatement):
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class MemberExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Target(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Name(self) -> str:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, target: IronPython.Compiler.Ast.Expression, name: str, ):
        ...

    def ToString(self, ) -> str:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformSet(self, span: Microsoft.Scripting.SourceSpan, right: System.Linq.Expressions.Expression, op: int, ) -> System.Linq.Expressions.Expression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def SetMemberOperator(self, right: System.Linq.Expressions.Expression, op: int, temp: System.Linq.Expressions.ParameterExpression, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformDelete(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class SuiteStatement(IronPython.Compiler.Ast.Statement):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Statements(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.Statement]:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, statements: System.Array[IronPython.Compiler.Ast.Statement], ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class ClassDefinition(IronPython.Compiler.Ast.ScopeStatement):
    @typing.overload
    def __init__(self, **kwargs):
        self._variableMapping: System.Collections.Generic.Dictionary[IronPython.Compiler.Ast.PythonVariable, System.Linq.Expressions.Expression]
        ...

    # static fields

    # properties
    @property
    def Header(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def HeaderIndex(self) -> int:
        ...
    @HeaderIndex.setter
    def HeaderIndex(self, val: int):
        ...

    @property
    def Name(self) -> str:
        ...

    @property
    def Bases(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression]:
        ...

    @property
    def Keywords(self) -> System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Keyword]:
        ...

    @property
    def Body(self) -> IronPython.Compiler.Ast.Statement:
        ...
    @Body.setter
    def Body(self, val: IronPython.Compiler.Ast.Statement):
        ...

    @property
    def Decorators(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.Expression]:
        ...
    @Decorators.setter
    def Decorators(self, val: System.Collections.Generic.IList[IronPython.Compiler.Ast.Expression]):
        ...

    @property
    def PythonVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @PythonVariable.setter
    def PythonVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def ModVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @ModVariable.setter
    def ModVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def DocVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @DocVariable.setter
    def DocVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def ModuleNameVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @ModuleNameVariable.setter
    def ModuleNameVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def ClassCellVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @ClassCellVariable.setter
    def ClassCellVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def ClassVariable(self) -> IronPython.Compiler.Ast.PythonVariable:
        ...
    @ClassVariable.setter
    def ClassVariable(self, val: IronPython.Compiler.Ast.PythonVariable):
        ...

    @property
    def HasLateBoundVariableSets(self) -> bool:
        ...
    @HasLateBoundVariableSets.setter
    def HasLateBoundVariableSets(self, val: bool):
        ...

    @property
    def needClassCell(self) -> bool:
        ...
    @needClassCell.setter
    def needClassCell(self, val: bool):
        ...

    @property
    def ScopeDocumentation(self) -> str:
        ...

    @property
    def ContainsImportStar(self) -> bool:
        ...
    @ContainsImportStar.setter
    def ContainsImportStar(self, val: bool):
        ...

    @property
    def ContainsExceptionHandling(self) -> bool:
        ...
    @ContainsExceptionHandling.setter
    def ContainsExceptionHandling(self, val: bool):
        ...

    @property
    def IsGeneratorMethod(self) -> bool:
        ...

    @property
    def LocalParentTuple(self) -> System.Linq.Expressions.ParameterExpression:
        ...

    @property
    def LocalContext(self) -> System.Linq.Expressions.Expression:
        ...

    @property
    def IsClosure(self) -> bool:
        ...

    @property
    def ContainsNestedFreeVariables(self) -> bool:
        ...
    @ContainsNestedFreeVariables.setter
    def ContainsNestedFreeVariables(self, val: bool):
        ...

    @property
    def NeedsLocalsDictionary(self) -> bool:
        ...
    @NeedsLocalsDictionary.setter
    def NeedsLocalsDictionary(self, val: bool):
        ...

    @property
    def Filename(self) -> str:
        ...

    @property
    def Variables(self) -> System.Collections.Generic.Dictionary[str, IronPython.Compiler.Ast.PythonVariable]:
        ...

    @property
    def IsGlobal(self) -> bool:
        ...

    @property
    def NeedsLocalContext(self) -> bool:
        ...

    @property
    def ParameterNames(self) -> System.Array[str]:
        ...

    @property
    def ArgCount(self) -> int:
        ...

    @property
    def KwOnlyArgCount(self) -> int:
        ...

    @property
    def Flags(self) -> int:
        ...

    @property
    def OriginalDelegate(self) -> System.Delegate:
        ...

    @property
    def ShouldInterpret(self) -> bool:
        ...
    @ShouldInterpret.setter
    def ShouldInterpret(self, val: bool):
        ...

    @property
    def FreeVariables(self) -> System.Collections.Generic.IList[IronPython.Compiler.Ast.PythonVariable]:
        ...

    @property
    def GlobalVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def CellVariables(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def TupleCells(self) -> int:
        ...

    @property
    def PyContext(self) -> IronPython.Runtime.PythonContext:
        ...

    @property
    def FuncCodeExpr(self) -> System.Linq.Expressions.Expression:
        ...
    @FuncCodeExpr.setter
    def FuncCodeExpr(self, val: System.Linq.Expressions.Expression):
        ...

    @property
    def PrintExpressions(self) -> bool:
        ...

    @property
    def ProfilerName(self) -> str:
        ...

    @property
    def Documentation(self) -> str:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, name: str, bases: System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Expression], keywords: System.Collections.Generic.IReadOnlyList[IronPython.Compiler.Ast.Keyword], body: IronPython.Compiler.Ast.Statement = ..., ):
        ...

    def ExposesLocalVariable(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> bool:
        ...

    def TryBindOuter(self, from_: IronPython.Compiler.Ast.ScopeStatement, reference: IronPython.Compiler.Ast.PythonReference, variable: ref[IronPython.Compiler.Ast.PythonVariable], ) -> bool:
        ...

    def BindReference(self, binder: IronPython.Compiler.Ast.PythonNameBinder, reference: IronPython.Compiler.Ast.PythonReference, ) -> IronPython.Compiler.Ast.PythonVariable:
        ...

    def LookupVariableExpression(self, variable: IronPython.Compiler.Ast.PythonVariable, ) -> System.Linq.Expressions.Expression:
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def MakeClassBody(self, ) -> Microsoft.Scripting.Ast.LightExpression[System.Func[IronPython.Runtime.CodeContext, IronPython.Runtime.CodeContext]]:
        ...

    def GetLambda(self, ) -> Microsoft.Scripting.Ast.LightLambdaExpression:
        ...

    def GetParentClosureTuple(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

    def FindSelfNames(self, ) -> str:
        ...

    def RewriteBody(self, visitor: System.Linq.Expressions.ExpressionVisitor, ) -> None:
        ...

class ParenthesisExpression(IronPython.Compiler.Ast.Expression):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Expression(self) -> IronPython.Compiler.Ast.Expression:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def IsConstant(self) -> bool:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    # methods
    def __init__(self, expression: IronPython.Compiler.Ast.Expression, ):
        ...

    def Reduce(self, ) -> System.Linq.Expressions.Expression:
        ...

    def TransformSet(self, span: Microsoft.Scripting.SourceSpan, right: System.Linq.Expressions.Expression, op: int, ) -> System.Linq.Expressions.Expression:
        ...

    def CheckAssign(self, ) -> str:
        ...

    def CheckAugmentedAssign(self, ) -> str:
        ...

    def CheckDelete(self, ) -> str:
        ...

    def TransformDelete(self, ) -> System.Linq.Expressions.Expression:
        ...

    def Walk(self, walker: IronPython.Compiler.Ast.PythonWalker, ) -> None:
        ...

class StorageData(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    ContextCount: int = ...
    ConstantCount: int = ...
    SymbolCount: int = ...
    GlobalCount: int = ...
    Contexts: System.Array[IronPython.Runtime.CodeContext] = ...
    Constants: System.Array[System.Object] = ...
    Globals: System.Array[IronPython.Compiler.PythonGlobal] = ...
    SiteLockObj: System.Object = ...
    StaticFields: int = ...
    ContextTypes: int = ...
    ConstantTypes: int = ...
    SymbolTypes: int = ...
    GlobalTypes: int = ...
    SiteTypes: int = ...

    # properties
    # methods
    @staticmethod
    def ContextStorageType(index: int, ) -> System.Type:
        ...

    @staticmethod
    def ConstantStorageType(index: int, ) -> System.Type:
        ...

    @staticmethod
    def GlobalStorageType(index: int, ) -> System.Type:
        ...

class SiteStorage002(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    SiteCount: int = ...
    Sites: System.Array[System.Runtime.CompilerServices.CallSite[T]] = ...

    # properties
    # methods
    @staticmethod
    def SiteStorageType(index: int, ) -> System.Type:
        ...

class ModuleName(IronPython.Compiler.Ast.DottedName):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields

    # properties
    @property
    def Names(self) -> System.Collections.Generic.IList[str]:
        ...

    @property
    def Parent(self) -> IronPython.Compiler.Ast.ScopeStatement:
        ...
    @Parent.setter
    def Parent(self, val: IronPython.Compiler.Ast.ScopeStatement):
        ...

    @property
    def IndexSpan(self) -> Microsoft.Scripting.IndexSpan:
        ...
    @IndexSpan.setter
    def IndexSpan(self, val: Microsoft.Scripting.IndexSpan):
        ...

    @property
    def Start(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def End(self) -> Microsoft.Scripting.SourceLocation:
        ...

    @property
    def EndIndex(self) -> int:
        ...
    @EndIndex.setter
    def EndIndex(self, val: int):
        ...

    @property
    def StartIndex(self) -> int:
        ...
    @StartIndex.setter
    def StartIndex(self, val: int):
        ...

    @property
    def Span(self) -> Microsoft.Scripting.SourceSpan:
        ...

    @property
    def NodeName(self) -> str:
        ...

    @property
    def CanThrow(self) -> bool:
        ...

    @property
    def CanReduce(self) -> bool:
        ...

    @property
    def NodeType(self) -> int:
        ...

    @property
    def GlobalParent(self) -> IronPython.Compiler.Ast.PythonAst:
        ...

    @property
    def EmitDebugSymbols(self) -> bool:
        ...

    @property
    def StripDocStrings(self) -> bool:
        ...

    @property
    def Optimize(self) -> bool:
        ...

    @property
    def Type(self) -> System.Type:
        ...

    # methods
    def __init__(self, names: System.Array[str], ):
        ...

class GlobalStorage001(System.Object, abc.ABC):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Global000: IronPython.Compiler.PythonGlobal = ...
    Global001: IronPython.Compiler.PythonGlobal = ...
    Global002: IronPython.Compiler.PythonGlobal = ...
    Global003: IronPython.Compiler.PythonGlobal = ...
    Global004: IronPython.Compiler.PythonGlobal = ...
    Global005: IronPython.Compiler.PythonGlobal = ...
    Global006: IronPython.Compiler.PythonGlobal = ...
    Global007: IronPython.Compiler.PythonGlobal = ...
    Global008: IronPython.Compiler.PythonGlobal = ...
    Global009: IronPython.Compiler.PythonGlobal = ...
    Global010: IronPython.Compiler.PythonGlobal = ...
    Global011: IronPython.Compiler.PythonGlobal = ...
    Global012: IronPython.Compiler.PythonGlobal = ...
    Global013: IronPython.Compiler.PythonGlobal = ...
    Global014: IronPython.Compiler.PythonGlobal = ...
    Global015: IronPython.Compiler.PythonGlobal = ...
    Global016: IronPython.Compiler.PythonGlobal = ...
    Global017: IronPython.Compiler.PythonGlobal = ...
    Global018: IronPython.Compiler.PythonGlobal = ...
    Global019: IronPython.Compiler.PythonGlobal = ...
    Global020: IronPython.Compiler.PythonGlobal = ...
    Global021: IronPython.Compiler.PythonGlobal = ...
    Global022: IronPython.Compiler.PythonGlobal = ...
    Global023: IronPython.Compiler.PythonGlobal = ...
    Global024: IronPython.Compiler.PythonGlobal = ...
    Global025: IronPython.Compiler.PythonGlobal = ...
    Global026: IronPython.Compiler.PythonGlobal = ...
    Global027: IronPython.Compiler.PythonGlobal = ...
    Global028: IronPython.Compiler.PythonGlobal = ...
    Global029: IronPython.Compiler.PythonGlobal = ...
    Global030: IronPython.Compiler.PythonGlobal = ...
    Global031: IronPython.Compiler.PythonGlobal = ...
    Global032: IronPython.Compiler.PythonGlobal = ...
    Global033: IronPython.Compiler.PythonGlobal = ...
    Global034: IronPython.Compiler.PythonGlobal = ...
    Global035: IronPython.Compiler.PythonGlobal = ...
    Global036: IronPython.Compiler.PythonGlobal = ...
    Global037: IronPython.Compiler.PythonGlobal = ...
    Global038: IronPython.Compiler.PythonGlobal = ...
    Global039: IronPython.Compiler.PythonGlobal = ...
    Global040: IronPython.Compiler.PythonGlobal = ...
    Global041: IronPython.Compiler.PythonGlobal = ...
    Global042: IronPython.Compiler.PythonGlobal = ...
    Global043: IronPython.Compiler.PythonGlobal = ...
    Global044: IronPython.Compiler.PythonGlobal = ...
    Global045: IronPython.Compiler.PythonGlobal = ...
    Global046: IronPython.Compiler.PythonGlobal = ...
    Global047: IronPython.Compiler.PythonGlobal = ...
    Global048: IronPython.Compiler.PythonGlobal = ...
    Global049: IronPython.Compiler.PythonGlobal = ...

    # properties
    # methods
class SiteStorage011(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
class SiteStorage012(System.Object, abc.ABC, typing.Generic[T]):
    @typing.overload
    def __init__(self, **kwargs):
        ...

    # static fields
    Site000: System.Runtime.CompilerServices.CallSite[T] = ...
    Site001: System.Runtime.CompilerServices.CallSite[T] = ...
    Site002: System.Runtime.CompilerServices.CallSite[T] = ...
    Site003: System.Runtime.CompilerServices.CallSite[T] = ...
    Site004: System.Runtime.CompilerServices.CallSite[T] = ...
    Site005: System.Runtime.CompilerServices.CallSite[T] = ...
    Site006: System.Runtime.CompilerServices.CallSite[T] = ...
    Site007: System.Runtime.CompilerServices.CallSite[T] = ...
    Site008: System.Runtime.CompilerServices.CallSite[T] = ...
    Site009: System.Runtime.CompilerServices.CallSite[T] = ...
    Site010: System.Runtime.CompilerServices.CallSite[T] = ...
    Site011: System.Runtime.CompilerServices.CallSite[T] = ...
    Site012: System.Runtime.CompilerServices.CallSite[T] = ...
    Site013: System.Runtime.CompilerServices.CallSite[T] = ...
    Site014: System.Runtime.CompilerServices.CallSite[T] = ...
    Site015: System.Runtime.CompilerServices.CallSite[T] = ...
    Site016: System.Runtime.CompilerServices.CallSite[T] = ...
    Site017: System.Runtime.CompilerServices.CallSite[T] = ...
    Site018: System.Runtime.CompilerServices.CallSite[T] = ...
    Site019: System.Runtime.CompilerServices.CallSite[T] = ...
    Site020: System.Runtime.CompilerServices.CallSite[T] = ...
    Site021: System.Runtime.CompilerServices.CallSite[T] = ...
    Site022: System.Runtime.CompilerServices.CallSite[T] = ...
    Site023: System.Runtime.CompilerServices.CallSite[T] = ...
    Site024: System.Runtime.CompilerServices.CallSite[T] = ...
    Site025: System.Runtime.CompilerServices.CallSite[T] = ...
    Site026: System.Runtime.CompilerServices.CallSite[T] = ...
    Site027: System.Runtime.CompilerServices.CallSite[T] = ...
    Site028: System.Runtime.CompilerServices.CallSite[T] = ...
    Site029: System.Runtime.CompilerServices.CallSite[T] = ...
    Site030: System.Runtime.CompilerServices.CallSite[T] = ...
    Site031: System.Runtime.CompilerServices.CallSite[T] = ...
    Site032: System.Runtime.CompilerServices.CallSite[T] = ...
    Site033: System.Runtime.CompilerServices.CallSite[T] = ...
    Site034: System.Runtime.CompilerServices.CallSite[T] = ...
    Site035: System.Runtime.CompilerServices.CallSite[T] = ...
    Site036: System.Runtime.CompilerServices.CallSite[T] = ...
    Site037: System.Runtime.CompilerServices.CallSite[T] = ...
    Site038: System.Runtime.CompilerServices.CallSite[T] = ...
    Site039: System.Runtime.CompilerServices.CallSite[T] = ...
    Site040: System.Runtime.CompilerServices.CallSite[T] = ...
    Site041: System.Runtime.CompilerServices.CallSite[T] = ...
    Site042: System.Runtime.CompilerServices.CallSite[T] = ...
    Site043: System.Runtime.CompilerServices.CallSite[T] = ...
    Site044: System.Runtime.CompilerServices.CallSite[T] = ...
    Site045: System.Runtime.CompilerServices.CallSite[T] = ...
    Site046: System.Runtime.CompilerServices.CallSite[T] = ...
    Site047: System.Runtime.CompilerServices.CallSite[T] = ...
    Site048: System.Runtime.CompilerServices.CallSite[T] = ...
    Site049: System.Runtime.CompilerServices.CallSite[T] = ...

    # properties
    # methods
